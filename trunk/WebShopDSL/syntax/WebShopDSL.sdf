%% Grammar for the WebShopDSL language
%% By default, based on an example "entities" syntax
module WebShopDSL

imports Common

exports

  context-free start-symbols
    Start

  context-free syntax
  
    "shop" ID "{" With* Sells "}" ProductType*								-> Start {cons ("Shop")}
    "with" SupportedClause STRING 											-> With {cons ("With")}
    "logo" 																	-> SupportedClause {cons("ShopLogo")}
    "title" 																-> SupportedClause {cons("ShopTitle")}
    "description"															-> SupportedClause {cons("ShopDescription")}
    "sells" "{" (ID ",")* ID "}"											-> Sells {cons("Sells")}
    "product type" ID "{" Property* "}"										-> ProductType {cons("Product")}
    SimpleProperty															-> Property {}
    ComplexProperty															-> Property {}
    ListProperty															-> Property {}
    ID ":" SimpleType ("(" AttributeList ")")?								-> SimpleProperty {cons("SimpleProperty")}
    ID ":" ComplexType  ("(" AttributeList ")")? 							-> ComplexProperty {cons("ComplexProperty")}
    ID "::" SimpleType  ("(" AttributeList ")")? 							-> ListProperty {cons("ListOfSimple")}
    ID "::" ComplexType  ("(" AttributeList ")")? 							-> ListProperty {cons("ListOfComplex")}
    "String"																-> SimpleType {cons("String")}
    "Int"																	-> SimpleType {cons("Int")}
    "Date"																	-> SimpleType {cons("Date")}
    "Float"																	-> SimpleType {cons("Float")}
    "Image"																	-> SimpleType {cons("Image")}
    "LongString"															-> SimpleType {cons("LongString")}
    "Email"																	-> SimpleType {cons("Email")}
    
    
   	"{" SimpleProperty* "}"										  			-> ComplexType {}
   	(Attribute ",")*Attribute												-> AttributeList {cons("AttributeList")}
   	ID ":" STRING															-> Attribute {cons("Attribute")}
