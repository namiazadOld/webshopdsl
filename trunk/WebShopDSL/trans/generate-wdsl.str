module generate-wdsl
	
	imports include/WebShopDSL
	  		libstratego-lib
  			libstratego-gpp
  			libstratego-aterm
  			lib/editor-common.generated
			pages
	strategies
		
		transform-to-wdsl:
        (selected, position, ast, path, project-path) -> (filename, <concat-strings>[entities,pages])
        with
          filename := <guarantee-extension(|"yml")> path;
          entities := <map; ws-gen> selected;
          pages := <pagesui> selected

	rules
		map = alltd(declare)
		
        declare:
        	p@BasicProduct(name, prop*) -> p
        	with <map(declare-property(|name))>prop*
        
        declare-property(|className):
        	c@ComplexProperty(name, type, attr*) -> c
        	with key := <concat-strings>[className, ".", name]; rules (GetProperty: key -> c)
        	
        declare-property(|className):
        	c@SimpleProperty(name, type, attr*) -> c
        	
        declare-property(|className):
        	c@ListOfComplex(name, type, attr*) -> c
            
        
		scan= topdown(try(\ComplexType(name, prop*) -> $[chos]\))
		pagesui= alltd(pg)
		
		ws-gen = alltd(ws)
		ws : Shop(shopName, with*, sells, basicType*, productType*, groupByType*, groupByProp*) -> 
			$[application [shopName]
				imports templates
				[<map(ws)> with*]
				
				[<map(ws)>productType*]
	
			]

		ws : ShopProperty(prop, value) -> <ws(|value)> prop
		ws(|value) : ShopDescription()	-> $[
			description {
				[value]	
			}
		]
		ws(|value) : ShopLogo()	-> $[
section pages

define page root() {
  main()
  define body() {

    "Hello world!"
  }
}			
define main(){
		includeCSS("layout.css")
		includeCSS("jquery-ui.css")
		includeJS("jquery.js")
		includeJS("jquery-ui.js")

		<script>
		$(function(){
					
						// Accordion
						$("#accordion").accordion({ header: "h3" });
					
					});
		</script>  	
		
	<div id="wrapper">
         <div id="header">
		 
		       mainheader()		 
			   
		 </div>
		 
         	<div id="navigation">
		 
		      <div id="tabs">
//		      	applicationmenu()
		      </div>
		</div>
		     
		
		 <div id="leftcolumn">
			<div class="arrowgreen">
				leftsidemenu()
			</div>
		 
		 </div>
		 <div id="content">
		      
			  body() 
		 
		 </div>
		 <div id="rightcolumn">
//		 	search()
//		 	testimonial()
		 </div>
		 <div id="footer">
//		       		footer()
			   <p />"powered by " <a href="http://webdsl.org">"WebDSL"</a><p />		
			    
	     </div>   </div>
}


define mainheader() {
  navigate(root()){
    image([value])
  }
}
		 			
define body(){
	
}		 			
		]
		ws(|value) : ShopTitle()	-> $[]


	//	ws	:	Sells(items*, item) -> $[[<map(ws);separate-by(|"\n");concat-strings>items*]
	//	 [<ws>item]]
		
		ws	:	BasicProduct(name, prop*) -> $[entity [name]{
			[<map(ws);separate-by(|"\n");concat-strings>prop* ]
		}
		[<map(complexExtract)>prop*]
		]
		with  rules ( BasicProductMap : name -> prop* )
		 
		ws	: 	Product(name, [], prop*) ->$[entity [name] {
			[<map(ws);separate-by(|"\n");concat-strings>prop* ]
		}
		[<map(complexExtract)>prop*]
		]
		
		ws	: 	Product(name, [base], prop*) ->$[entity [name]: [base] {
			[<map(ws);separate-by(|"\n");concat-strings>prop* ]
		}
		[<map(complexExtract)>prop*]
		]
			
		
		complexExtract: l@ListOfComplex(name, ComplexType(typeName, prop*), attr*) -> $[entity [typeName]{
			[<map(ws);separate-by(|"\n");concat-strings>prop* ]
		}

		]
		
		complexExtract: l@ComplexProperty(name, ComplexType(typeName, prop*), attr*) -> $[entity [typeName]{
			[<map(ws);separate-by(|"\n");concat-strings>prop* ]
		}
		
		]

		complexExtract: l@SimpleProperty(name, type, attr*) -> $[]
			
		ws	:	SimpleProperty(name, type, attr*) -> $[[name] :: [<ws>type]]
		ws	:	ComplexProperty(name, ComplexType(typeName, prop*), attr*)	-> $[[name] -> [typeName]]
		ws	: 	ListOfComplex(name, ComplexType(typeName, prop*), attr*)	-> $[ [name]->Set<[typeName]>]
		
		ws	:	String()	->	$[String]
		ws	:	Int()		->	$[Int]
		ws	:	Float()		->	$[Float]
		ws	:	Date()		->	$[Date]
		ws	:	Image()		->	$[Image]
		ws	:	LongString()->	$[WikiText]
		ws	:	Email()		->	$[Email]
		

		